/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Customer;

import Model.Customer.Customer;
import Model.Database;
import Model.Event;
import Model.Volunteer.Volunteer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author evelynzu
 */
public class CustomerMain extends javax.swing.JPanel {

    /**
     * Creates new form CustomerMain
     */
    
    javax.swing.JPanel CardSequencePanel;
    
    DefaultTableModel model;
    TableRowSorter myTableRowSorter;
    Event selectedEvent;
    Customer customer;
    ArrayList<Event> events;
    Database database;
    

    public CustomerMain(JPanel clp, Customer customer) {
        this.CardSequencePanel = clp;
        this.customer = customer;
        initComponents();
        
        database = new Database();
        events = new ArrayList<>();
        dbGetEvent();
        populateEventTable();
        sort(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEvent = new javax.swing.JTable();
        btnBuy = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        tblEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event", "Date", "Location", "Capacity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEventMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEvent);

        btnBuy.setText("Buy Ticket");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(btnBuy)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(btnBuy)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Event", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 742, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ticket", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblEventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEventMouseClicked
        int selectedRowIndex = tblEvent.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblEvent.getModel();
        selectedEvent = (Event)model.getValueAt(tblEvent.convertRowIndexToModel(selectedRowIndex), 0);
        System.out.print(selectedEvent.getEvent_id());
    }//GEN-LAST:event_tblEventMouseClicked

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        String insertsql = " insert into transfer (sender, receiver, type, amount, state, event)"
            + " values ("+customer.getUserAccount().getUser_id()+","+ selectedEvent.getEventOrganizer()+ ","+ 
                "'payment'"+ ","+ selectedEvent.getTicketPrice()+ ","+ "'pending'"+ "," + selectedEvent.getEvent_id()+")";  
        database.insert(insertsql);
    }//GEN-LAST:event_btnBuyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblEvent;
    // End of variables declaration//GEN-END:variables

    public void dbGetEvent(){
        try{  
            Class.forName("com.mysql.cj.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
            "jdbc:mysql://localhost:3306/ems_5100","root","root");   
            Statement stmt=con.createStatement();  
            ResultSet rs=stmt.executeQuery("select * from event");  
            
            while(rs.next()) {
                Event event = new Event();
                event.setEvent_id(Integer.valueOf(rs.getString("event_id")));
                event.setName(rs.getString("event_name"));
                event.setDate(rs.getDate("date"));
                event.setLocation(rs.getNString("location"));
                event.setEventOrganizer(rs.getString("event_organizer"));
                event.setVolunteerCapacity(rs.getString("volunteer_capacity"));
                events.add(event);
                
            }

            rs.close();
            con.close();  
            }catch(Exception e){ System.out.println(e);}  
    }

    
    public void populateEventTable() {
        model = (DefaultTableModel) tblEvent.getModel();
        model.setRowCount(0);
        for(Event event: events) {
            Object[] row = new Object[4];
            row[0] = event;
            row[1] = event.getDate();
            row[2] = event.getLocation();
            row[3] = event.getVolunteerCapacity();
            model.addRow(row);
        }
    }
        
    public void sort(DefaultTableModel model) {
        myTableRowSorter = new TableRowSorter(model);
        tblEvent.setRowSorter(myTableRowSorter);
        
    }



}
