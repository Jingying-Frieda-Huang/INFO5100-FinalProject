/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Sponsor;

import Model.Database;
import Model.Event;
import Model.Sponsor;
import Model.SponsorRequest;
import UserInterface.Welcome.WelcomeJPanel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author evelynzu
 */
public class SponsorRequestList extends javax.swing.JPanel {

    /**
     * Creates new form SponsorRequestList
     */
    
    TableRowSorter myTableRowSorter;
    ArrayList<SponsorRequest> reqList;
    Sponsor sp;
    Database db;
    
    
    javax.swing.JPanel CardSequencePanel;
    public SponsorRequestList(JPanel clp, Sponsor sponsor) {
        this.CardSequencePanel = clp;
        this.sp = sponsor;
        initComponents();
        
        reqList = new ArrayList<>();
        getAllRequests();
        populateRequestTable();
        db = new Database();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReq = new javax.swing.JTable();

        setBackground(new java.awt.Color(189, 212, 231));

        jLabel1.setText("Welcome, Sponsor");

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnAccept.setText("Accept Proposal");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnDeny.setText("Deny Proposal");
        btnDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyActionPerformed(evt);
            }
        });

        tblReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Event", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReq);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAccept)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeny))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(100, 100, 100))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(343, 343, 343))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnDeny)
                    .addComponent(jButton2))
                .addContainerGap(142, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        SponsorEventDetails sponsorEventDetails = new SponsorEventDetails(CardSequencePanel);
//        CardSequencePanel.removeAll();
//        CardSequencePanel.add("Event Detail", sponsorEventDetails);
//        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        
        WelcomeJPanel welcomeJPanel = new WelcomeJPanel(CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("welcome", welcomeJPanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        int selectedRow = tblReq.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to Accept.");
            return ;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblReq.getModel();
        SponsorRequest request = (SponsorRequest) model.getValueAt(selectedRow, 0);
        
        if (request.getStatus().equalsIgnoreCase("Accepted")){
            JOptionPane.showMessageDialog(this, "Request already processed.");
            return;
        }
        
        String sqlInsert = "insert into transfer (sender, receiver, "
                    + "type, amount, state, event, request_id) values ("+ request.getSponsorId() +","+ 
                    request.getOrganizerId() +",'sponsorship'," + request.getAmount()+", 'pending',"
                    + request.getEventId() + ","+ request.getRequestId() +")";
        db.insert(sqlInsert);
        
        String sqlUpdate = "update sponsor_request set status = 'In-Progress' where request_id ="+ request.getRequestId();
        db.update(sqlUpdate);
        
        JOptionPane.showMessageDialog(this, "Amount transfer initiated.");
        
        populateRequestTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyActionPerformed
        int selectedRow = tblReq.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to Deny.");
            return ;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblReq.getModel();
        SponsorRequest request = (SponsorRequest) model.getValueAt(selectedRow, 0);
        
        String sqlUpdate = "update sponsor_request set status = 'Rejected' where request_id ="+ request.getRequestId();
        db.update(sqlUpdate);
        
        getAllRequests();
        populateRequestTable();
    }//GEN-LAST:event_btnDenyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDeny;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReq;
    // End of variables declaration//GEN-END:variables

    private void getAllRequests() {
        try{  
            Class.forName("com.mysql.cj.jdbc.Driver");  
            Connection con=DriverManager.getConnection(  
            "jdbc:mysql://localhost:3306/ems_5100","root","root");   
            Statement stmt=con.createStatement();  
//            sponsor id is the same as user id
//            for all the models user id will be the identity
            ResultSet rs=stmt.executeQuery("select * from sponsor_request where sponsor_id = " + sp.getUser().getUser_id());  
            
            while(rs.next()) {
                SponsorRequest spRequest = new SponsorRequest();
                spRequest.setEventId(rs.getInt("event_id"));
                spRequest.setSponsorId(rs.getInt("sponsor_id"));
                spRequest.setAmount(rs.getInt("amount"));
                spRequest.setStatus(rs.getString("status"));
                spRequest.setOrganizerId(rs.getInt("organizer_id"));
                spRequest.setRequestId(rs.getInt("request_id"));
                reqList.add(spRequest);
                
            }

            rs.close();
            con.close();  
        }catch(Exception e){ System.out.println(e);}
    }

    private void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel)tblReq.getModel();
        model.setRowCount(0);
        
        for(SponsorRequest s: reqList) {
            Object[] row = new Object[3];
            row[0] = s;
            row[1] = s.getAmount();
            row[2] = s.getStatus();
            model.addRow(row);
        }
    }
    
}
